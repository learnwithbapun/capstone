Class -1 
https://www.scaler.com/topics/course/java-beginners/
https://docs.spring.io/spring-framework/reference/core/beans/introduction.html
https://docs.spring.io/spring-framework/reference/overview.html
https://spring.io/guides/gs/rest-service/
https://start.spring.io/
https://spring.io/
https://www.primevideotech.com/video-streaming/scaling-up-the-prime-video-audio-video-monitoring-service-and-reducing-costs-by-90
https://docs.google.com/document/d/1Gn2ib5YhhpcFUiWGAUbCpg0ZPh3m_wSA-9IolGMjkIE/edit?usp=sharing

Class 2

https://docs.google.com/document/d/1w-uU0vZOpT5Q1reABCt_raZedDG8CTEjNx8nNgI4dNc/edit#heading=h.6gw7lgye8kq1

https://learngitbranching.js.org/


Class -3 

https://github.com/deepakkasera
https://learngitbranching.js.org/

class - 4:

https://stackoverflow.com/questions/3903817/pull-new-updates-from-original-github-repository-into-forked-github-repository
https://github.com/deepakkasera/GitDemoEve24
git remote get-url origin
https://docs.google.com/document/d/1w-uU0vZOpT5Q1reABCt_raZedDG8CTEjNx8nNgI4dNc/edit?usp=sharing


Class - 5 (Backend Projects: Intro to Spring Framework and Building First API):

https://www.scaler.com/topics/course/java-beginners/
https://docs.spring.io/spring-framework/reference/core/beans/introduction.html
https://docs.spring.io/spring-framework/reference/overview.html
https://spring.io/guides/gs/rest-service/
https://spring.io/
https://www.primevideotech.com/video-streaming/scaling-up-the-prime-video-audio-video-monitoring-service-and-reducing-costs-by-90
https://docs.google.com/document/d/1Gn2ib5YhhpcFUiWGAUbCpg0ZPh3m_wSA-9IolGMjkIE/edit?usp=sharing



command to run Spring project :
mvn spring-boot:run

class  -6

logging.level.org.springframework.web=TRACE

Stateless vs Stateful
Stateless: Stateless means there is no state stored between requests.
 Each request from a client to the server must contain all the information required to understand the request, and cannot take advantage of any stored context on the server. Stateless is the default behavior of HTTP, but it can be overridden by the developer.

Every object should be self-sufficient & completely independent to return the response.

 Stateful: Stateful means the server stores state information for the client and every client request must contain all the information required by the server 
 to fulfill the request. The server can store state information for a client in a variety of ways, 
 such as in a session object that is available to all resources in the application.


Class - 7

https://docs.spring.io/spring-framework/reference/core/beans/java/configuration-annotation.html
https://www.baeldung.com/rest-template
https://github.com/deepakkasera/ProductServiceMar24
https://github.com/deepakkasera/ProductServiceMorningBatch
https://fakestoreapi.com/products/1
https://fakestoreapi.com/docs

Class - 8:

https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
https://www.baeldung.com/java-type-erasure
https://github.com/deepakkasera/ProductServiceMar24

class : 9

https://github.com/deepakkasera/ProductServiceMar24
https://www.baeldung.com/java-checked-unchecked-exceptions

Censor Board during movie release -- @ControllerAdvice

@ControllerAdvice - ControllerAdvice is the 

Class - 10:

https://www.uuidgenerator.net/

https://vladmihalcea.com/blog/
https://thorben-janssen.com/

UUID -- > if we use int -- maximum 2B can be used
better togo with BigInt/Long -- it can be capable till 8B

Auto increment -- its an issue if the API exposing getID api anyone can easily fetch last 24 ID data -- Web Scraping -- soits not a good idea if api exposing  getID api .
autoincrement is bad in everyway
UUID == > fun(machine ID  + user id , IP ,timestamp,  -- - -- - - - )n number of parameters 
UUID 128 bit number -- 

Class -11:

Inheritence in DB :
-- Mapped Super Class
--Joined Table(Best Solution)
--Table Per class
-- Single Table class(Worst Solution)

Class - 12
https://www.baeldung.com/hibernate-inheritance
https://github.com/deepakkasera/ProductServiceMar24


Database setup commands
create database productserviceevebatch;
create user productserviceevebatchuser;
grant all privileges on productserviceevebatch.* to productserviceevebatchuser;


https://spring.io/guides/gs/accessing-data-mysql
https://mvnrepository.com/

MYSQL Credential :

Data base setup command:

create database productservice;
create user paridabapun;
grant all privileges on productservice.* to paridabapun;

class 13:


Query Method :
-Declared Query 
-HQL --> Hibernate Query Language(we can use entity name directly in the query with projection also )
-SQL --> native Query -- nativeQuery = true

Projection i missed -- 2:18 hr --> //it will help if you have 2 attribute -- 


--> Representing cardinalities :

--> Mapped By
--> Cascading

Fetch Type: --Eager & Lazy 
--> Schema Verioning

https://docs.spring.io/spring-data/jpa/reference/repositories/projections.html
https://github.com/deepakkasera/ProductServiceMar24

JPABuddy

{ "title" : "iphone 15 pro", "description" : "Latest iphone", "price" : "150000", "category" : { "description" : "iphone" }, "image" : "imageURL" }

https://docs.spring.io/spring-data/jpa/reference/jpa/query-methods.html#:~:text=Using%20named%20queries%20to%20declare,them%20to%20the%20domain%20class
https://docs.spring.io/spring-data/jpa/reference/jpa/query-methods.html#:~:text=Using%20named%20queries%20to%20declare,them%20to%20the%20domain%20class

https://docs.spring.io/spring-data/jpa/reference/repositories/query-methods-details.html

https://docs.google.com/document/d/1rJQqAUXpIwDqPrVRQQwo70GcvMs5sgDb6IQnwdvXkQA/edit#heading=h.uj8r8fo8vac


Class -14( Backend Projects: Cardinalities, Fetch Modes & Schema Migration)

https://www.baeldung.com/hibernate-fetchmode
https://mvnrepository.com/artifact/org.flywaydb/flyway-mysql/10.11.0
https://mvnrepository.com/artifact/org.flywaydb/flyway-core/10.11.0
https://www.baeldung.com/jpa-cascade-types
https://notability.com/n/0rsFiPFmx3ceDQe~cjWe7j

--> Representing cardinalities :

--> Mapped By
--> Cascading

Schema versioning :

librry :

Flyway
liguibase


JPA Buddy + JPA Explorer  tools more life easy 


N+1 problem :

Catogy --> Products fetchinh will enhance using custcom query to avoid n+1 problem 



Class -15(Backend Projects: Unit Testing):
Test Driven Development 
Flaky Test Cases

Types of Testing :
-- Unit testing(Testing the code in isolation)
-- Integration Testing (Some Mocking may be )
-- Funtional Testing (Real Testing No mocking )

github actions(triggers)

SIT -- System Integration Testing
UAT -- User Acceptance Testing


Class -16(Backend Projects Testing Good Practices, Mocking, Types of Doubles)


Class - 17(Backend Projects: Testing 3)

3A & 3C -- Aarange  -- Create Test class 
      Act  -- Call the method 
      Assert -- 

Dependency :

assert j -core 


--
@MockBean
assertTrue()
assertEqual()
assertThrow()
assertSame()

class -18 Backend Projects: Authentication - 1: Auth v/s Auth, Tokens, BCrypt:

Authentication 
Authorization 
RBAC(Role Base Authentication control)

jwt.io
https://notability.com/n/ftDmx_8O56NGeuOGR9ax_
https://auth0.com/blog/hashing-in-action-understanding-bcrypt/

https://www.okta.com/identity-101/authentication-vs-authorization/
https://www.okta.com/identity-101/authentication-vs-authorization/
https://mailsafi.com/blog/top-200-most-common-passwords/

Class : 19

JWT
OAuth
Implementing UserService

https://www.base64decode.org/
https://www.base64encode.org/

https://datatracker.ietf.org/doc/html/rfc6749  -- This is answer all the queries anyone have relate dot authentication and OAuth

Class : 20(OAuth___UserService)










